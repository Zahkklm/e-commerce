services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your_secret_key
      - MONGO_URI=mongodb://mongo:27017/e-commerce-db
    depends_on:
      - mongo
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm start

  payment-service:
    build:
      context: ../microservices/payment-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://mongo:27017/payment-db
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - mongo
      - kafka
    volumes:
      - ../microservices/payment-service:/usr/src/app
      - /usr/src/app/node_modules

  invoice-service:
    build:
      context: ../microservices/invoice-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://mongo:27017/invoice-db
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - mongo
      - kafka
    volumes:
      - ../microservices/invoice-service:/usr/src/app
      - /usr/src/app/node_modules

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "payment-completed:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  mongo:
    image: mongo:6
    container_name: mongodbdata
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data: